@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model List<CartItem> 
@section Css{
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
}
<div class="container my-5" style="background-color: #ffffff; padding: 20px; border-radius: 8px;">
    <h2 class="text-center mb-4" style="color: #ff9800;">Giỏ hàng của bạn</h2>
    <a style="text-decoration:none; color: orange" asp-controller="Home" asp-action="PaymentInformation">Lịch sử đặt hàng</a>
    <br />
    <!-- Danh sách sản phẩm -->
    <div class="table-responsive">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">@TempData["SuccessMessage"]</div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        }
        <table class="table table-bordered align-middle text-center">
            <thead style="background-color: #ff9800; color: white;">
                <tr>
                    <th>STT</th>
                    <th>Sản phẩm</th>
                    <th>Hình ảnh</th>
                    <th>Số lượng</th>
                    <th>Đơn giá</th>
                    <th>Tổng tiền</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody id="cart-items">
                @if (Model == null || !Model.Any())
                {
                    <tr>
                        <td colspan="7">Giỏ hàng trống.</td>
                    </tr>
                }
                else
                {
                    @foreach (var anhHanBiBan in Model.Select((value, index) => new { value, index }))
                    {
                        var stt = anhHanBiBan.index + 1;
                        <form asp-action="DeleteFoodInCart" method="post">
                        <tr>
                            <td>@stt</td>
                            <td>@anhHanBiBan.value.FoodName</td>
                            <td>
                                <img src="~/img/food_menu/@anhHanBiBan.value.ImageUrl" alt="FoodName" class="img-thumbnail" style="width: 70px;  height:70px">
                            </td>
                            <td>
                                <input type="number" name="quantity" value="@anhHanBiBan.value.Quatity" class="form-control form-control-sm text-center quantity" min="0" data-price="@anhHanBiBan.value.Price">
                            </td>
                            <td>@anhHanBiBan.value.Price.ToString("C0",new System.Globalization.CultureInfo("vi-VN"))</td>
                            <td class="item-total">@((anhHanBiBan.value.Price * anhHanBiBan.value.Quatity))</td>
                            
                                <input type="hidden" value="@anhHanBiBan.value.FoodItemId" name="foodItemId">
                            
                            <td>
                                <button type="submit" class="btn btn-sm delete-btn" style="background-color: #ff5722; color: white;">Xóa</button>
                            </td>
                        </tr>
                        </form>
                    }
                }

            </tbody>
        </table>
    </div>

    <!-- Tổng tiền -->
    <div class="row mt-4">
        <div class="col-md-6 text-start">
            <h4 style="color: #ff9800;">Tổng cộng: <span id="total-price"></span></h4>
        </div>
        <div class="col-md-6 text-end">
            <button class="btn btn-lg" style="background-color: #ff9800; color: white;">Thanh Toán Đơn Hàng</button>
        </div>
    </div>
</div>

@section scripts{
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // // Thêm sự kiện cho nút xóa
        // document.querySelectorAll('.delete-btn').forEach(button => {
        //     button.addEventListener('click', function (event) {
        //         const confirmation = confirm("Bạn có chắc chắn muốn xóa sản phẩm này?");
        //         if (confirmation) {
        //             const row = event.target.closest('tr');
        //             row.remove();
        //             updateTotalPrice();
        //         }
        //     });
        // });

        // Hàm tính lại tổng tiền
                function updateTotalPrice() {
            let total = 0; // Tổng tiền giỏ hàng
            const cartItems = document.querySelectorAll('#cart-items tr');

            cartItems.forEach(item => {
                const quantityInput = item.querySelector('.quantity');
                const priceData = quantityInput.dataset.price;

                // Lấy số lượng và đơn giá, kiểm tra hợp lệ
                const quantity = parseInt(quantityInput.value) || 0;
                const price = parseInt(priceData) || 0;

                // Tính tổng tiền của từng sản phẩm
                const itemTotal = quantity * price;

                // Cập nhật hiển thị tổng tiền sản phẩm
                const itemTotalElement = item.querySelector('.item-total');
                if (itemTotalElement) {
                    itemTotalElement.textContent = formatCurrency(itemTotal);
                }

                // Cộng dồn vào tổng tiền
                total += itemTotal;
            });

            // Cập nhật hiển thị tổng tiền giỏ hàng
            const totalPriceElement = document.getElementById('total-price');
            if (totalPriceElement) {
                totalPriceElement.textContent = formatCurrency(total);
            }
        }

        function formatCurrency(amount) {
            return amount.toLocaleString('vi-VN', {
                style: 'currency',
                currency: 'VND'
            });
        }

        // Cập nhật lại tổng tiền khi thay đổi số lượng
        document.querySelectorAll('.quantity').forEach(input => {
            input.addEventListener('input', updateTotalPrice);
        });
        document.addEventListener('DOMContentLoaded',updateTotalPrice)
    </script>
}